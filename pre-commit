#!/usr/bin/env python

# This is free and unencumbered software released into the public domain.
#
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.
#
# In jurisdictions that recognize copyright laws, the author or authors
# of this software dedicate any and all copyright interest in the
# software to the public domain. We make this dedication for the benefit
# of the public at large and to the detriment of our heirs and
# successors. We intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to this
# software under copyright law.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# For more information, please refer to <http://unlicense.org/>

"""
This pre-commit hook for Git checks modified Python modules with Pyflakes and
searches for trailing spaces or tabs.

Thanks to unutbu (http://stackoverflow.com/users/190597/unutbu) for the answer
to this question: http://bit.ly/ph97P1
"""

__author__ = "Benoit Thiell"
__email__ = "badzil@gmail.com"

import os
import sys

def main():
    """
    Checks your git commit with PyFlakes.
    """
    ok = True
    for filepath in get_modified_files():
        ok = check_with_pyflakes(filepath) and ok
        ok = check_python_syntax(filepath) and ok

    if ok:
        print >> sys.stderr, 'The commit has been verified.'
        sys.exit(0)
    else:
        sys.stdin = open('/dev/tty')
        answer = raw_input('Commit anyway? [N/y] ')
        if answer.strip().lower().startswith('y'):
            print >> sys.stderr, 'Committing anyway.'
            sys.exit(0)
        else:
            print >> sys.stderr, 'Commit aborted.'
            sys.exit(1)

def check_with_pyflakes(filepath):
    """
    Checks a Python file with pyflakes. Ignores the 'redefinition of unused'
    modules messages as those are often false-positives.
    """
    ok = True
    for line in os.popen('pyflakes %s' % filepath):
        if 'redefinition of unused' not in line:
            print line.strip()
            ok = False
    return ok

def check_python_syntax(filepath):
    """
    Checks Python code for tabs and trailing spaces.
    """
    code = open(filepath).read()
    if '\t' in code:
        print '%s contains tabs.' % filepath
        return False
    elif ' \n' in code:
        print '%s contains trailing spaces.' % filepath
        return False
    return True

def get_modified_files():
    """
    Returns an iterator on the list of modified files.
    """
    for line in os.popen('git status'):
        if line.startswith('#\tmodified:   '):
            modified_file = line.replace('#\tmodified:', '').strip()
            if modified_file.endswith('.py'):
                yield modified_file
        elif line == '# Changes not staged for commit:\n':
            break

if __name__ == '__main__':
    main()
