#!/usr/bin/env python

import os
import sys

def main():
    """
    Checks your git commit with PyFlakes.
    """
    ok = True
    for filepath in get_modified_files():
        ok = ok and check_with_pyflakes(filepath)
        ok = ok and check_python_syntax(filepath)

    if ok:
        print >> sys.stderr, 'The commit has been verified.'
        sys.exit(0)
    else:
        print >> sys.stderr, 'The commit contains errors.'
        sys.exit(1)
#       answer = raw_input('Commit anyway? [N/y] ')
#       if answer.strip()[0].lower() == 'y':
#           print >> sys.stderr, 'Committing anyway.'
#           sys.exit(0)
#       else:
#           print >> sys.stderr, 'Commit aborted.'
#           sys.exit(1)

def check_with_pyflakes(filepath):
    ok = True
    for line in os.popen('pyflakes %s' % filepath):
        if 'redefinition of unused' not in line:
            print line.strip()
            ok = False
    return ok

def check_python_syntax(filepath):
    """
    Checks Python code for tabs and trailing spaces.
    """
    code = open(filepath).read()
    if '\t' in code:
        print '%s contains tabs.' % filepath
        return False
    elif ' \n' in code:
        print '%s contains trailing spaces.' % filepath
        return False
    return True

def get_modified_files():
    for line in os.popen('git status'):
        if line.startswith('#\tmodified:   '):
            modified_file = line.replace('#\tmodified:', '').strip()
            if modified_file.endswith('.py'):
                yield modified_file
        elif line == '# Changes not staged for commit:\n':
            break

if __name__ == '__main__':
    main()
