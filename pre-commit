#!/usr/bin/python2.6

__requires__ = 'pyflakes==0.4.0'

import compiler
import os
import pyflakes.checker
import sys

def main():
    """
    Checks your git commit with PyFlakes.
    """
    ok = True
    for filepath in get_modified_files():
        ok = ok and check_with_pyflakes(filepath)
        ok = ok and check_python_syntax(filepath)

    if ok:
        sys.exit(0)
    else:
        print >> sys.stderr, 'Commit refused.'
        sys.exit(1)

def check_with_pyflakes(filepath):
    try:
        tree = compiler.parseFile(filepath)
    except (SyntaxError, IndentationError):
        print >> sys.stderr, "%s: Pyflakes error." % filepath
        return False
    else:
        w = pyflakes.checker.Checker(tree, filepath)
        w.messages.sort(lambda a, b: cmp(a.lineno, b.lineno))
        ok = True
        for message in w.messages:
            if 'redefinition of unused' not in message.message:
                print message
                ok = False
        if not ok:
            return False
    return True

def check_python_syntax(filepath):
    """
    Checks Python code for tabs and trailing spaces.
    """
    code = open(filepath).read()
    if '\t' in code:
        print '%s contains tabs.' % filepath
        return False
    elif ' \n' in code:
        print '%s contains trailing spaces.' % filepath
        return False
    return True

def get_modified_files():
    for line in os.popen('git status'):
        if line.startswith('#\tmodified:   '):
            modified_file = line.replace('#\tmodified:', '').strip()
            yield modified_file
        elif line == '# Changes not staged for commit:\n':
            break

if __name__ == '__main__':
    main()
